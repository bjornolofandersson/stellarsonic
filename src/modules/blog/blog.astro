---
import { CollectionEntry, getCollection } from 'astro:content';
import Page from '@layouts/Page.astro'
import BlogTheme from './blog.svelte';
import { Page as AstroPage } from 'astro';
import { BlogPage } from './blog';
import theme from '@theme/index';

interface Props {
  entry: CollectionEntry<'blogs'>;

  page: AstroPage;
}

const { entry, page } = Astro.props;
const isDev = import.meta.env.MODE === 'development';

const blogPage: BlogPage = {
  title: entry.data.title,
  url: `/${entry.slug}`,
  posts: page.data.map(({slug, data, collection}) => ({
    slug, url: `/${entry.slug}/${slug}`, data, collection
  })),
  theme: {},
  currentPage: page.currentPage,
  start: page.start,
  end: page.end,
  total: page.total,
  size: page.size,
  lastPage: page.lastPage,
}

const themeSettings = theme.modules.blog;
const style = {
  layout: 'alternate',
}

const posts = await getCollection(entry.data.posts.collection as any);
---

<Page editor="blog" editorProps={{slug: entry.slug, posts, settings: entry.data, themeData: style}}>
  <Fragment slot="head-bottom">
    <title>{entry.data.title}</title>
  </Fragment>

  {isDev || themeSettings.client
    ? <BlogTheme page={blogPage} blogData={entry.data} themeData={style} client:load />
    : <BlogTheme page={blogPage} blogData={entry.data} themeData={style} />
  }
</Page>
