---
import site from '@settings';
import { getCollection } from 'astro:content';
import Page from '@layouts/Page.astro'
import BlogTheme from './blog.svelte';
import { Blog } from './blog.server';
import { Page as AstroPage } from 'astro';
import { BlogPage } from './blog';
import theme from '@theme/index';

interface Props extends Blog {
  page: AstroPage;
}

const config = Astro.props;
const { pagination, page, path, title } = config;
const isDev = import.meta.env.MODE === 'development';

const blogPage: BlogPage = {
  title,
  url: path,
  posts: page.data.map(({slug, data, collection}) => ({
    slug, url: `${path}/${slug}`, data, collection
  })),
  theme: {},
  currentPage: page.currentPage,
  start: page.start,
  end: page.end,
  total: page.total,
  size: page.size,
  lastPage: page.lastPage,
}

const themeSettings = theme.modules.blog;
const style = {
  layout: 'alternate',
}

const posts = await getCollection(config.posts.collection as any);
---

<Page editor="blog" editorProps={{...config, posts, settings: site, themeData: style}}>
  <Fragment slot="head-bottom">
    <title>{config.title}</title>
  </Fragment>

  {isDev || themeSettings.client
    ? <BlogTheme page={blogPage} themeData={style} client:load />
    : <BlogTheme page={blogPage} themeData={style} />
  }
</Page>
