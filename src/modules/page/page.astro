---
import { CollectionEntry, getEntry } from 'astro:content';
import Page from '@layouts/Page2.astro'
import EditorLoader from '@components/EditorLoader.svelte';
import PageTheme from './page.svelte';
import deepMerge from 'deepmerge';
import { getSitemap } from '@lib/server';

interface Props {
  entry: CollectionEntry<'pages'>;
}

const defaultStyle: any = {
  fontSize: {
    h1: 6, h2: 5, h3: 4, h4: 3, h5: 2, h6: 2, p: 1
  },
  color: {
    h1: '#000', 
    h2: '#000', 
    h3: '#000', 
    h4: '#000', 
    h5: '#000', 
    h6: '#000', 
    p: '#000', 
  },
  textAlign: 'left',
}

let baseStyle = defaultStyle;
try {
  const base = await getEntry('pages', '_base-page.md' as any);
  baseStyle = base.data.style;
} catch (err) {
  // do nothing;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const sitemap = await getSitemap();

const entity = {
  id: entry.id.replace(/\.[^/.]+$/, ""),
  slug: entry.slug,
  data: deepMerge({style: defaultStyle}, entry.data),
  body: entry.body,
}
---

<Page>
  <Fragment slot="head-bottom">
    <title>{entry.data.title}</title>
  </Fragment>

  <Fragment slot="editor">
    <EditorLoader module="page" props={{data: entity, baseStyle}} client:only/>
  </Fragment>

  <PageTheme data={entity} baseStyle={baseStyle} sitemap={sitemap} client:load>
    <Content/>
  </PageTheme>
</Page>
