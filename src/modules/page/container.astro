---
import { CollectionEntry, getEntry } from 'astro:content';
import Page from '@layouts/Page2.astro';
import EditorLoader from '@components/EditorLoader.svelte';
import { getServerModules } from '@lib/server';
import Schema from '@components/Schema.astro';
import deepMerge from 'deepmerge';
import { CollectionController } from '@lib/CollectionController';

interface Props {
  entry: CollectionEntry<'pages'>;

  template: Entity<any>;
}

const { entry, template } = Astro.props;
const content = entry.data.content;
  
const ref = await getEntry(content.collection as any, content.id);
const modules = getServerModules();
const {Component, jsonld, editorProps} = modules[content.type] as any;

const page = CollectionController.makeEntity(entry);
---

<Page>
  <Fragment slot="head-bottom">
    <Schema data={jsonld(ref)}/>
    <title>{ref.data.title}</title>
  </Fragment>

  <Fragment slot="editor">
    <EditorLoader module="page" props={{data: page, template}} client:only>
      <EditorLoader module={content.type} props={editorProps(ref)} client:only />
    </EditorLoader>
  </Fragment>

  <Component entry={ref} page={page} template={template} />
</Page>
