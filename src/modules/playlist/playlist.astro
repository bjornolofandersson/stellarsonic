---
import * as site from '@settings';
import { CollectionEntry } from 'astro:content';
import Page from '@layouts/Page.astro'
import Schema from '@components/Schema.astro'
import { PostController } from '@lib/PostController';
//import PlaylistPost from '@theme/playlist/PlaylistPost.svelte';
import Playlist from './playlist.svelte';

interface Props {
  collection: string;

  entry: CollectionEntry<'mixes'>;
}

const { entry, collection } = Astro.props;
const { Content } = await entry.render();
const col = new PostController(collection);

const editorProps = {
  collection,
  slug: entry.slug,
  data: entry.data,
  assets: col.getAssetPaths(entry.slug),
};


const {title, subtitle, date, image, description, tracks, genres, tags} = entry.data;

const schema = {
  "@context": "https://schema.org",
  "@type": "MusicPlaylist",
  headline: title,
  alternativeHeadline: subtitle,
  datePublished: `${date}`,
  image: {
    "@type": "ImageObject",
    url: `${site.url}${image}`,
  },
  description: `${description}`,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": `${site.url}/mixes/`,
  },
  track: tracks.map(({name, artist, year, duration}) => ({
    "@type": "MusicRecording",
    name,
    byArtist: artist,
    copyrightYear: year,
    duration,
  })),
  genre: genres,
  keywords: tags.join(', '),
}
---

<Page editor="playlist" editorProps={editorProps}>
  <Fragment slot="head-bottom">
    <Schema data={schema}/>
    <title>{entry.data.title}</title>
  </Fragment>

  <Playlist slug={entry.slug} data={entry.data} client:load>
    <Fragment slot="article">
      <Content/>
    </Fragment>
  </Playlist>
  <!--
  <PlaylistPost slug={entry.slug} data={entry.data} client:load>
    <MenuBar settings={settings} slot="menu" />

    <Fragment slot="article">
      <Content/>
    </Fragment>
  </PlaylistPost>
-->
</Page>
