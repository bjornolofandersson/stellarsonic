---
import * as site from '@settings';
import { CollectionEntry } from 'astro:content';
import Page from '@layouts/Page.astro'
import Schema from '@components/Schema.astro'
import { CollectionController } from '@lib/CollectionController';
import Playlist from './playlist.svelte';
import MenuBar from '@theme/MenuBar.svelte';
import { getSitemap } from '@lib/server';

interface Props {
  collection: string;

  entry: CollectionEntry<'mixes'>;

  parentUrl: string;
}

const { entry, collection, parentUrl } = Astro.props;
const { Content } = await entry.render();
const col = new CollectionController(collection);

const editorProps = {
  parentUrl: parentUrl,
  collection,
  slug: entry.slug,
  data: entry.data,
  assets: col.getAssetPaths(entry.slug),
};

const {title, subtitle, date, image, description, tracks, genres, tags} = entry.data;
const sitemap = await getSitemap();

const schema = {
  "@context": "https://schema.org",
  "@type": "MusicPlaylist",
  headline: title,
  alternativeHeadline: subtitle,
  datePublished: `${date}`,
  image: {
    "@type": "ImageObject",
    url: `${site.url}${image}`,
  },
  description: `${description}`,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": `${site.url}/mixes/`,
  },
  track: tracks.map(({name, artist, year, duration}) => ({
    "@type": "MusicRecording",
    name,
    byArtist: artist,
    copyrightYear: year,
    duration,
  })),
  genre: genres,
  keywords: tags.join(', '),
}
---

<Page editor="playlist" editorProps={editorProps}>
  <Fragment slot="head-bottom">
    <Schema data={schema}/>
    <title>{entry.data.title}</title>
  </Fragment>

  <Playlist slug={entry.slug} data={entry.data} client:load>
    <MenuBar sitemap={sitemap} slot="menu" />
    <Content slot="article"/>
  </Playlist>
</Page>
