---
import { Entity, MountConfig } from '@lib/interfaces';
import { getServerModules } from '@lib/server';
import { CollectionEntry, getCollection } from 'astro:content';
import App from '@components/App.astro'
import { getPagePaths } from '@lib/page';
import { Page, Palette, Template } from 'src/content/config';

export async function getStaticPaths() {
  const isDev = import.meta.env.MODE === 'development';
  const modules = getServerModules();
  const pages = await getCollection('pages', p => {
    return isDev || !p.data.draft;
  });
  let paths: any[] = [];

  for (const page of pages) {
    paths.push(...await getPagePaths(page, modules));
  }
  return paths;
}

interface Props extends MountConfig {
  Component: any;

  entry: CollectionEntry<any>;

  title: string;

  page: Entity<Page>;

  template: Entity<Template>;
  
  palette: Entity<Palette>;

  module?: string;
}
---

<App {...Astro.props} />
