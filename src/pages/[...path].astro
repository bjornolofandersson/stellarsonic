---
import { ServerModule, SitePage } from '@lib/interfaces';
import * as site from '@settings';


export async function getStaticPaths() {
  function getServerModules() {
    const modules = import.meta.glob('../modules/*/*.server.ts', {eager: true, });
    const result: Record<string, ServerModule> = {};
    for (const path in modules) {
      const name = path.substring(path.lastIndexOf('/') + 1).replace('.server.ts', '');
      result[name] = modules[path] as ServerModule;
    }
    return result;
  }

  const pages = site.pages as SitePage[];
  let paths: any[] = [];

  for (const page of pages) {
    const modules = getServerModules();
    paths = paths.concat(await modules[page.type].getStaticPaths(page));
  }

  return paths;
}

interface Props {
  Module: any;

  title: string;

  props: any;
}

const { title, Module, props } = Astro.props;
---

<Module title={title} {...props} />
